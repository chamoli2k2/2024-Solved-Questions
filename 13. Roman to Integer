class Solution {
public:
    int romanToInt(string s) {
        int n = s.size(), ans = 0;
        stack<char> st;
        unordered_map<char,int> mp;
        mp['I'] = 1, mp['V'] = 5, mp['X'] = 10, mp['L'] = 50, mp['C'] = 100, mp['D'] = 500, mp['M'] = 1000;
        
        for(int i=0; i<n; i++){
            if(!st.empty() && mp[st.top()] < mp[s[i]]){
                ans += mp[s[i]] - mp[st.top()];
                st.pop();
            }
            else{
                st.push(s[i]);
            }
        }

        while(!st.empty()){
            ans += mp[st.top()];
            st.pop();
        }

        return ans;
    }
};
