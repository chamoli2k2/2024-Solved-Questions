class Solution {
private:
    int check(vector<vector<int>> &mat,int i,int j,int n,int m){
        if(i-1 >= 0 && mat[i][j] < mat[i-1][j]){
            return 1;
        }

        if(i+1 < n && mat[i][j] < mat[i+1][j]){
            return 2;
        }

        if(j-1 >= 0  && mat[i][j] < mat[i][j-1]){
            return 3;
        }

        if(j+1 < m && mat[i][j] < mat[i][j+1]){
            return 4;
        }

        return -1;
    }
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int n = mat.size(), m = mat[0].size(), i = 0, j = 0;
        
        while(i < n && j < m){
            int k = check(mat,i,j,n,m);

            if(k == -1){
                return {i,j};
            }
            else if(k == 1){
                i--;
            }
            else if(k == 2){
                i++;
            }
            else if(k == 3){
                j--;
            }
            else{
                j++;
            }
        }

        return {-1,-1};
    }
};
