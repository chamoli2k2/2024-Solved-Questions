class Solution {
private:
    bool solve(string &s,int i,int j){
        // Base case
        if(i >= j) return 1;

        if(dp[i][j] != -1) return dp[i][j];

        if(s[i] == s[j]){
            return dp[i][j] = solve(s,i+1,j-1);
        }

        return dp[i][j] = false;
    }
public:
    int dp[1001][1001];
    string longestPalindrome(string s) {
        int n = s.size(), maxLen = 0, start;
        memset(dp,-1,sizeof(dp));

        for(int i=0; i<n; i++){
            for(int j=i; j<n; j++){
                if(solve(s,i,j)){
                    if(j-i+1 > maxLen){
                        maxLen = j - i + 1;
                        start = i;
                    }
                }
            }
        }

        return s.substr(start,maxLen);
    }
};
